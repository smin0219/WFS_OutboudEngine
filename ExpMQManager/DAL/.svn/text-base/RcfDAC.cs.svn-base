using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using ExpMQManager.Data;
using System.Data;

namespace ExpMQManager.DAL
{
    public class RcfDAC : BaseDAC
    {
        public RcfEntity GetRCFInfoDAC(int mid, int flightSeq, string msgType, string subType, int queueId)
        {
            BaseEntity baseAWB = GetBaseAWBInfoDAC(mid, flightSeq, msgType, subType, queueId);

            string strSql = "";
            string arrColumnName = "";

            strSql = @" SELECT MIN(FlightNo) FlightNo, SUM(OnPcs) Pcs, SUM(OnWeight) Weight, MIN(Partial) Partial,
	                          (SELECT TOP 1 {2} FROM imp_FlightStats WHERE FlightSeq = {1}) arrDate
                        FROM ePic_FlightMaster
                        WHERE MID = {0} AND FlightSeq = {1}
                        GROUP BY MID
                    ";
            if (subType.ToUpper() == "RCF")
                arrColumnName = "ArrCargoDate";

            if (subType.ToUpper() == "ARR")
                arrColumnName = "ArrFltDate";

            strSql = string.Format(strSql, mid, flightSeq, arrColumnName);

            return GetRCFfromReader(baseAWB, ExecuteReader(strSql));
        }

        public RcfEntity GetRCFfromReader(BaseEntity baseEntity, IDataReader reader)
        {
            if (!reader.IsClosed)
            {
                reader.Read();

                int pcs = 0; try { pcs = (int)reader["Pcs"]; } catch { }
                double weight = 0.00; try { weight = Convert.ToDouble(reader["Weight"].ToString()); }
                catch (Exception e) { }

                RcfEntity rcfEntity = new RcfEntity(
                    baseEntity,
                    reader["flightNo"].ToString().Trim(),
                    pcs,
                    weight,
                    reader["Partial"].ToString().Trim(),
                    (DateTime)reader["arrDate"]);

                reader.Close();
                return rcfEntity;
            }
            else
            {
                RcfEntity rcfEntity = new RcfEntity();
                return rcfEntity;
            }
        }
    }
}
